@charset "UTF-8";

@mixin pseudo {
	position: relative;
	&::before, &::after {
		position: absolute;
		content: '';
		top: 0;
		left: 0;
	}
};
@mixin clearfix {
	&::after {
		clear: both;
		display: table;
		content: '';
	}
};

// font size: 16px;
@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

@mixin line-height($heightValue: 1.6) {
  line-height: ($heightValue * 10) + px;
  line-height: $heightValue + rem;
}

///font stacks
$font-stack-helvetica: (
  "Helvetica Neue",
  "Helvetica",
  "Arial",
  sans-serif,
);

//Font-face
//example 
//
// @include font-face('museosans-300', "../fonts/museosanscyrl_300" ,null, null, ttf eot woff2 woff)
// @include font-face('Samplinal', 'fonts/Samplinal', 500, normal, eot woff2 woff);
//
//  =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}